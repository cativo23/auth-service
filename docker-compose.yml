version: '3'
services:
    auth-service.app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: auth-service/app
        restart: unless-stopped
        tty: true
        working_dir: /var/www/html
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
        volumes:
            - './:/var/www/html'
        networks:
            - auth-service
            - parking-microservices_internal
        labels:
            - "traefik.enable=false"
        depends_on:
            - auth-service.mysql

    auth-service.nginx:
        image: nginx:alpine
        restart: unless-stopped
        # Dev Only
        ports:
            - '${APP_PORT}:80'
        tty: true
        volumes:
            - './:/var/www/html'
            - './docker/nginx:/etc/nginx/conf.d'
        networks:
            - auth-service
            - parking-microservices_gateway
            - web
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.auth-service.replacepath.path=/api/auth"
            - "traefik.http.routers.auth-service.middlewares=auth-service"
            - "traefik.http.routers.auth-service.rule=Host(`api.${DOMAIN}`) && Path(`/api/auth`)"
            - "traefik.http.routers.auth-service.entrypoints=websecure"
            - "traefik.http.routers.auth-service.service=auth-service"
            - "traefik.http.services.auth-service.loadbalancer.server.port=80"
            - "traefik.http.routers.auth-service.tls.certresolver=lets-encrypt"
            - "traefik.http.routers.auth-service.tls=true"
            - "traefik.docker.network=web"
        depends_on:
            - auth-service.app

    auth-service.mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${AUTH_DB_PORT}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'auth-service-mysql:/var/lib/mysql'
        networks:
            - auth-service
        labels:
            - "traefik.enable=false"
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
            retries: 3
            timeout: 5s

networks:
    auth-service:
        driver: bridge
    parking-microservices_gateway:
        external: true
    parking-microservices_internal:
        external: true
    web:
     external: true
volumes:
    auth-service-mysql:
        driver: local
